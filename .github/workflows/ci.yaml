---
name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches-ignore: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup and Cache
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.setup.outputs.node-version }}
      cache-hit: ${{ steps.setup.outputs.cache-hit }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        id: setup
        uses: ./.github/actions/setup
        with:
          cache-key-suffix: ci

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        uses: ./.github/actions/setup

      - name: Run ESLint
        run: pnpm run lint

      - name: Check formatting
        run: |
          pnpm run fix
          if ! git diff --exit-code; then
            echo "❌ Code formatting issues found. Run 'pnpm run fix' to fix them."
            exit 1
          else
            echo "✅ Code formatting is correct."
          fi

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        uses: ./.github/actions/setup

      - name: Run tests with coverage
        run: pnpm run test -- --coverage

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        uses: ./.github/actions/setup

      - name: Build project
        run: pnpm run build

      - name: Analyze build output
        run: pnpm run analyze-build

      - name: Check build output
        run: |
          if [ ! -d "dist" ]; then
            echo "❌ Build failed - dist directory not found"
            exit 1
          fi

          if [ ! -f "dist/index.html" ]; then
            echo "❌ Build failed - index.html not found"
            exit 1
          fi

          echo "✅ Build completed successfully"
          echo "Build size:"
          du -sh dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build-artifacts
          path: dist/
          retention-days: 30

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        uses: ./.github/actions/setup

      - name: Run TypeScript compiler
        run: pnpm exec tsc --noEmit

  validate:
    name: Validate Dependencies
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        uses: ./.github/actions/setup

      - name: Check for security vulnerabilities
        run: pnpm audit --audit-level moderate

      - name: Check for outdated dependencies
        run: pnpm outdated || true

      - name: Validate package.json
        run: |
          if ! jq empty package.json; then
            echo "❌ package.json is not valid JSON"
            exit 1
          fi
          echo "✅ package.json is valid"

  matrix-test:
    name: Matrix Test
    runs-on: ${{ matrix.os }}
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [22]
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        uses: ./.github/actions/setup
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run critical tests
        run: pnpm run test

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [lint, test, build, type-check, validate]
    permissions:
      pull-requests: write
    if: always()
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.lint.result }}" != "success" ]]; then
            echo "❌ Linting failed"
            exit 1
          fi

          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "❌ Tests failed"
            exit 1
          fi

          if [[ "${{ needs.build.result }}" != "success" ]]; then
            echo "❌ Build failed"
            exit 1
          fi

          if [[ "${{ needs.type-check.result }}" != "success" ]]; then
            echo "❌ Type checking failed"
            exit 1
          fi

          if [[ "${{ needs.validate.result }}" != "success" ]]; then
            echo "❌ Dependency validation failed"
            exit 1
          fi

          echo "✅ All quality checks passed!"

      - id: get-app-token
        name: Get Workflow Access Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ secrets.APPLICATION_ID }}
          permission-contents: read
          permission-pull-requests: write
          private-key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          token: ${{ steps.get-app-token.outputs.token }}

      - name: Post PR comment
        if: github.event_name == 'pull_request' && github.event.action != 'synchronize'
        env:
          GH_TOKEN: ${{ steps.get-app-token.outputs.token }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "✅ All CI checks passed! Ready for review."
