---
name: E2E Tests

on:
  pull_request:
    branches: [main]
  push:
    branches-ignore: [main]
  workflow_dispatch:
    inputs:
      browser:
        description: Browser to test
        required: false
        default: all
        type: choice
        options:
          - all
          - chromium
          - firefox
          - webkit
      test-type:
        description: Type of tests to run
        required: false
        default: all
        type: choice
        options:
          - all
          - e2e
          - visual
          - accessibility

permissions:
  contents: read
  actions: read
  pages: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup E2E Environment
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.setup.outputs.node-version }}
      playwright-version: ${{ steps.playwright-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        id: setup
        uses: ./.github/actions/setup
        with:
          cache-key-suffix: e2e

      - name: Get Playwright version
        id: playwright-version
        run: echo "version=$(pnpm list @playwright/test --depth=0 --json | jq -r '.[] | .dependencies | .["@playwright/test"] | .version')" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps chromium

      - name: Install Playwright dependencies only
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: pnpm exec playwright install-deps

  build-for-tests:
    name: Build for Testing
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        uses: ./.github/actions/setup

      - name: Build project
        run: pnpm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build-artifacts-e2e
          path: dist/
          retention-days: 1

  e2e-tests:
    name: E2E Tests (${{ matrix.browser }})
    runs-on: ubuntu-latest
    needs: [setup, build-for-tests]
    strategy:
      fail-fast: false
      matrix:
        # browser: [chromium, firefox, webkit]
        browser: [chromium]
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        uses: ./.github/actions/setup

      - name: Cache Playwright browsers
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ needs.setup.outputs.playwright-version }}

      - name: Download build artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: build-artifacts-e2e
          path: dist/

      - name: Run E2E tests
        run: pnpm exec playwright test --project=${{ matrix.browser }}-desktop
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: http://localhost:4173

      - name: Upload test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: e2e-results-${{ matrix.browser }}
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  visual-regression:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    needs: [setup, build-for-tests]
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        uses: ./.github/actions/setup

      - name: Cache Playwright browsers
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ needs.setup.outputs.playwright-version }}

      - name: Download build artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: build-artifacts-e2e
          path: dist/

      - name: Run visual regression tests
        run: pnpm run test:visual
        env:
          CI: true
          PLAYWRIGHT_BASE_URL: http://localhost:4173

      - name: Upload visual test artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: visual-test-results
          path: |
            test-results/
            tests/visual/**/*-actual.png
            tests/visual/**/*-diff.png
          retention-days: 30

  #   accessibility-tests:
  #     name: Accessibility Tests
  #     runs-on: ubuntu-latest
  #     needs: [setup, build-for-tests]
  #     steps:
  #       - name: Checkout
  #         uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #
  #       - name: Setup project
  #         uses: ./.github/actions/setup
  #
  #       - name: Cache Playwright browsers
  #         uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
  #         with:
  #           path: ~/.cache/ms-playwright
  #           key: playwright-${{ runner.os }}-${{ needs.setup.outputs.playwright-version }}
  #
  #       - name: Download build artifacts
  #         uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
  #         with:
  #           name: build-artifacts-e2e
  #           path: dist/
  #
  #       - name: Run accessibility tests
  #         run: pnpm run test:accessibility
  #         env:
  #           CI: true
  #           PLAYWRIGHT_BASE_URL: http://localhost:4173
  #
  #       - name: Upload accessibility test results
  #         uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
  #         if: always()
  #         with:
  #           name: accessibility-test-results
  #           path: |
  #             test-results/
  #             accessibility-reports/
  #           retention-days: 30

  test-summary:
    name: Test Summary & Badge Generation
    runs-on: ubuntu-latest
    #    needs: [e2e-tests, visual-regression, accessibility-tests]
    needs: [e2e-tests, visual-regression]
    if: always()
    permissions:
      contents: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        uses: ./.github/actions/setup

      - name: Download all test artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: '*-test-results*'
          merge-multiple: true
          path: test-artifacts/

      - name: Download E2E results
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: 'e2e-results-*'
          merge-multiple: true
          path: test-artifacts/e2e/

      - name: Generate test summary
        run: |
          echo "# E2E Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Check test results
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.e2e-tests.result }}" == "success" ]]; then
            echo "✅ **E2E Tests**: All browsers passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **E2E Tests**: Some tests failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [[ "${{ needs.visual-regression.result }}" == "success" ]]; then
            echo "✅ **Visual Regression**: All tests passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Visual Regression**: Visual differences detected" >> $GITHUB_STEP_SUMMARY
          fi

          # if [[ "${{ needs.accessibility-tests.result }}" == "success" ]]; then
          #   echo "✅ **Accessibility**: All tests passed" >> $GITHUB_STEP_SUMMARY
          # else
          #   echo "❌ **Accessibility**: Accessibility violations found" >> $GITHUB_STEP_SUMMARY
          # fi

      - name: Generate badges
        run: pnpm run badges

      - name: Upload badge data
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: badge-data
          path: badges/
          retention-days: 30

      - name: Cleanup old artifacts
        run: pnpm run artifacts:cleanup
        continue-on-error: true

      - name: Generate artifact management report
        run: pnpm run artifacts report
        continue-on-error: true

      - name: Upload artifact report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: artifact-management-report
          path: test-dashboard/artifact-report.json
          retention-days: 90

  notification:
    name: Test Notifications
    runs-on: ubuntu-latest
    needs: [test-summary]
    if: always() && github.event_name == 'pull_request'
    permissions:
      pull-requests: write
    steps:
      - id: get-app-token
        name: Get Workflow Access Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ secrets.APPLICATION_ID }}
          permission-contents: read
          permission-pull-requests: write
          private-key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          token: ${{ steps.get-app-token.outputs.token }}

      - name: Comment on PR
        env:
          GH_TOKEN: ${{ steps.get-app-token.outputs.token }}
        run: |
          if [[ "${{ needs.test-summary.result }}" == "success" ]]; then
            gh pr comment ${{ github.event.pull_request.number }} --body "✅ E2E testing completed successfully! All accessibility, visual, and functional tests passed."
          else
            gh pr comment ${{ github.event.pull_request.number }} --body "❌ E2E testing completed with issues. Please check the test results and fix any failures before merging."
          fi
