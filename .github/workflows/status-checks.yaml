---
name: Status Checks

on:
  pull_request:
    branches: [main]
  workflow_run:
    workflows:
      - CI
      - E2E Tests
      - Performance Testing
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write
  statuses: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  collect-status:
    name: Collect Test Status
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event.workflow_run.conclusion != 'cancelled'
    outputs:
      ci-status: ${{ steps.check-ci.outputs.status }}
      e2e-status: ${{ steps.check-e2e.outputs.status }}
      performance-status: ${{ steps.check-performance.outputs.status }}
      overall-status: ${{ steps.overall.outputs.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup project
        uses: ./.github/actions/setup

      - name: Check CI workflow status
        id: check-ci
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # For PR events, we'll check the status later via API
            echo "status=pending" >> $GITHUB_OUTPUT
          else
            # For workflow_run events, check the specific workflow
            if [[ "${{ github.event.workflow_run.name }}" == "CI" ]]; then
              echo "status=${{ github.event.workflow_run.conclusion }}" >> $GITHUB_OUTPUT
            else
              echo "status=pending" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Check E2E Tests workflow status
        id: check-e2e
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "status=pending" >> $GITHUB_OUTPUT
          else
            if [[ "${{ github.event.workflow_run.name }}" == "E2E Tests" ]]; then
              echo "status=${{ github.event.workflow_run.conclusion }}" >> $GITHUB_OUTPUT
            else
              echo "status=pending" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Check Performance Testing workflow status
        id: check-performance
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "status=pending" >> $GITHUB_OUTPUT
          else
            if [[ "${{ github.event.workflow_run.name }}" == "Performance Testing" ]]; then
              echo "status=${{ github.event.workflow_run.conclusion }}" >> $GITHUB_OUTPUT
            else
              echo "status=pending" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Calculate overall status
        id: overall
        run: |
          ci_status="${{ steps.check-ci.outputs.status }}"
          e2e_status="${{ steps.check-e2e.outputs.status }}"
          performance_status="${{ steps.check-performance.outputs.status }}"

          echo "CI Status: $ci_status"
          echo "E2E Status: $e2e_status"
          echo "Performance Status: $performance_status"

          # Determine overall status
          if [[ "$ci_status" == "success" && "$e2e_status" == "success" && "$performance_status" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
          elif [[ "$ci_status" == "failure" || "$e2e_status" == "failure" || "$performance_status" == "failure" ]]; then
            echo "status=failure" >> $GITHUB_OUTPUT
          else
            echo "status=pending" >> $GITHUB_OUTPUT
          fi

  comprehensive-status-check:
    name: Comprehensive Test Suite Status
    runs-on: ubuntu-latest
    needs: collect-status
    if: always()
    permissions:
      contents: read
      actions: read
      checks: write
      statuses: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get app token for status updates
        id: get-app-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ secrets.APPLICATION_ID }}
          permission-contents: read
          permission-actions: read
          permission-checks: write
          permission-statuses: write
          permission-pull-requests: write
          private-key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: Report comprehensive status
        env:
          GH_TOKEN: ${{ steps.get-app-token.outputs.token }}
        run: |
          # Create a comprehensive status report
          overall_status="${{ needs.collect-status.outputs.overall-status }}"
          ci_status="${{ needs.collect-status.outputs.ci-status }}"
          e2e_status="${{ needs.collect-status.outputs.e2e-status }}"
          performance_status="${{ needs.collect-status.outputs.performance-status }}"

          echo "## Test Suite Status Report" > status_report.md
          echo "" >> status_report.md

          # Add status for each test suite
          if [[ "$ci_status" == "success" ]]; then
            echo "✅ **CI Tests**: Unit tests, linting, build, and type checking passed" >> status_report.md
          elif [[ "$ci_status" == "failure" ]]; then
            echo "❌ **CI Tests**: Some CI checks failed" >> status_report.md
          else
            echo "⏳ **CI Tests**: Running or pending" >> status_report.md
          fi

          if [[ "$e2e_status" == "success" ]]; then
            echo "✅ **E2E Tests**: End-to-end, visual regression, and accessibility tests passed" >> status_report.md
          elif [[ "$e2e_status" == "failure" ]]; then
            echo "❌ **E2E Tests**: Some E2E tests failed" >> status_report.md
          else
            echo "⏳ **E2E Tests**: Running or pending" >> status_report.md
          fi

          if [[ "$performance_status" == "success" ]]; then
            echo "✅ **Performance Tests**: Lighthouse performance audits passed" >> status_report.md
          elif [[ "$performance_status" == "failure" ]]; then
            echo "❌ **Performance Tests**: Performance regression detected" >> status_report.md
          else
            echo "⏳ **Performance Tests**: Running or pending" >> status_report.md
          fi

          echo "" >> status_report.md

          # Overall summary
          if [[ "$overall_status" == "success" ]]; then
            echo "🎉 **Overall Status**: All test suites passed! This PR is ready for review." >> status_report.md
            gh api repos/${{ github.repository }}/statuses/${{ github.sha }} \
              --method POST \
              --field state=success \
              --field target_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
              --field description="All test suites passed" \
              --field context="tests/comprehensive"
          elif [[ "$overall_status" == "failure" ]]; then
            echo "⚠️  **Overall Status**: Some test suites failed. Please review and fix the issues." >> status_report.md
            gh api repos/${{ github.repository }}/statuses/${{ github.sha }} \
              --method POST \
              --field state=failure \
              --field target_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
              --field description="Some test suites failed" \
              --field context="tests/comprehensive"
          else
            echo "🔄 **Overall Status**: Tests are still running..." >> status_report.md
            gh api repos/${{ github.repository }}/statuses/${{ github.sha }} \
              --method POST \
              --field state=pending \
              --field target_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
              --field description="Tests are running" \
              --field context="tests/comprehensive"
          fi

          # Post comment on PR if applicable
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Check if we already commented
            existing_comment=$(gh pr view ${{ github.event.pull_request.number }} --json comments --jq '.comments[] | select(.body | contains("## Test Suite Status Report")) | .id' || echo "")

            if [[ -n "$existing_comment" ]]; then
              # Update existing comment
              gh api repos/${{ github.repository }}/issues/comments/$existing_comment \
                --method PATCH \
                --field body="$(cat status_report.md)"
            else
              # Create new comment
              gh pr comment ${{ github.event.pull_request.number }} --body-file status_report.md
            fi
          fi

  status-check-summary:
    name: Test Status Summary
    runs-on: ubuntu-latest
    needs: [collect-status, comprehensive-status-check]
    if: always()
    steps:
      - name: Summary
        run: |
          echo "# Comprehensive Test Status Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This workflow provides a unified status check for all test suites:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **CI Tests**: Unit tests, linting, build validation, type checking" >> $GITHUB_STEP_SUMMARY
          echo "- **E2E Tests**: End-to-end, visual regression, accessibility testing" >> $GITHUB_STEP_SUMMARY
          echo "- **Performance Tests**: Lighthouse audits and performance regression detection" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Overall Status**: ${{ needs.collect-status.outputs.overall-status || 'unknown' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This status check can be used as a required check for branch protection." >> $GITHUB_STEP_SUMMARY
